version: '3.5'
services:

#  config-server:
#    build:
#      context: ./config-server
#    hostname: config-server
#    environment: 
#      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/AntonIshchenko/microservice_cource.git
#      - SPRING_CLOUD_CONFIG_SERVER_GIT_SEARCH_PATHS=config/
#      - SPRING_CLOUD_CONFIG_SERVER_GIT_FORCE_PULL=true
#      - SPRING_CLOUD_CONFIG_SERVER_GIT_CLONE_ON_START=true
#    command: ["java", "-jar", "/config-server-0.0.1-SNAPSHOT.jar"]
#    expose: 
#      - "8090"
#    ports:
#      - "8090:8090"
#    networks:
#      microservice-net:
#        aliases:
#          - config-server
#    healthcheck:
#      test: curl --fail http://config-server:8090/api-gateway/development || exit 1
#      interval: 30s
#      retries: 3
#      start_period: 20s
#      timeout: 10s
#      
#  api-gateway:
#    build:
#      context: ./api-gateway
#    hostname: api-gateway
#    command: ["java", "-jar", "/api-gateway-0.0.1-SNAPSHOT.jar"]
#    restart: on-failure
#    expose: 
#      - "8888"
#    ports:
#      - "8888:8888"
#    networks:
#      microservice-net:
#        aliases:
#          - api-gateway
#    depends_on:
#      config-server:
#        condition: service_healthy
#
#
#  song-service:
#    build:
#      context: ./song_service
#    hostname: song_service
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://metadata:5432/metadata
#      - SPRING_DATASOURCE_USERNAME=user
#      - SPRING_DATASOURCE_PASSWORD=password
#    command: ["java", "-jar", "/song_service-1.0-SNAPSHOT.jar"]
#    ports:
#      - "8081:8081"
#    networks:
#      microservice-net:
#        aliases:
#          - song-service
#    depends_on:
#      config-server:
#        condition: service_healthy
#    restart: on-failure
#    
#  resource-service:
#    build:
#      context: ./resource_service
#    hostname: resource-service
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://resources:5432/resources
#      - SPRING_DATASOURCE_USERNAME=user
#      - SPRING_DATASOURCE_PASSWORD=password
#    command: ["java", "-jar", "/resource_service-1.0-SNAPSHOT.jar"]
#    ports:
#      - "8080:8080"
#    networks:
#      microservice-net:
#        aliases:
#          - resource-service
#    depends_on:
#      config-server:
#        condition: service_healthy
#    restart: on-failure
#
#  resource-processor:
#    build:
#      context: ./resource_processor
#    hostname: resource-processor
#    command: ["java", "-jar", "/resource_processor-1.0-SNAPSHOT.jar"]
#    ports:
#      - "8082:8082"
#    networks:
#       microservice-net:
#        aliases:
#          - resource-processor
#    depends_on:
#      config-server:
#        condition: service_healthy
#
#  storage-service:
#    build:
#      context: ./storage-service
#    hostname: storage-service
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://storages:5432/storages
#      - SPRING_DATASOURCE_USERNAME=user
#      - SPRING_DATASOURCE_PASSWORD=password
# #     - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://host.docker.internal:8099/auth/realms/storage-service/protocol/openid-connect/certs
#    command: ["java", "-jar", "/storage-service-1.0-SNAPSHOT.jar"]
#    ports:
#      - "8085:8085"
#    networks:
#      microservice-net:
#        aliases:
#          - storage-service
#    depends_on:
##      security-server:
##        condition: service_healthy
#      config-server:
#        condition: service_healthy
#    restart: on-failure
        

networks:
  microservice-net:
    name: microservice-net
    driver: bridge
